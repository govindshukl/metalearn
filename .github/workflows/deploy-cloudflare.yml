name: Deploy to Cloudflare Pages

on:
  push:
    branches:
      - main
      - master
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
      - master
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '21'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build application
        run: yarn build:app
        env:
          VITE_APP_GIT_SHA: ${{ github.sha }}
          VITE_APP_ENABLE_TRACKING: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/') }}

      - name: Copy Cloudflare configuration
        run: |
          cp cloudflare/_headers excalidraw-app/build/
          cp cloudflare/_redirects excalidraw-app/build/

      - name: Determine environment
        id: env
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "environment=${{ github.event.inputs.environment }}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref }}" == refs/tags/* ]]; then
            echo "environment=production" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref }}" == "refs/heads/main" ]] || [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
            echo "environment=staging" >> $GITHUB_OUTPUT
          else
            echo "environment=preview" >> $GITHUB_OUTPUT
          fi

      - name: Deploy to Cloudflare Pages (Production)
        if: steps.env.outputs.environment == 'production'
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy excalidraw-app/build --project-name=excalidraw --branch=main

      - name: Deploy to Cloudflare Pages (Staging)
        if: steps.env.outputs.environment == 'staging'
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy excalidraw-app/build --project-name=excalidraw-staging --branch=staging

      - name: Deploy to Cloudflare Pages (Preview)
        if: steps.env.outputs.environment == 'preview'
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy excalidraw-app/build --project-name=excalidraw --branch=pr-${{ github.event.pull_request.number }}

      - name: Comment PR with preview URL
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'üöÄ Preview deployment ready!\n\nView your changes at: https://excalidraw-c3r.pages.dev'
            })

      - name: Verify deployment
        run: |
          echo "‚úÖ Deployment successful!"
          echo "üåç Production URL: https://excalidraw-c3r.pages.dev"
          echo "üåç Custom domain: https://learn.metaglass.ai (requires DNS configuration)"
